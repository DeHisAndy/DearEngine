
Texture2D renderTexture;
SamplerState  pointSample;

struct VS_INPUT
{
    float3 pos : POSITION;
    float4 color: COLOR;
	float3 normal:NORMAL;
	float4 tangent:TANGENT;
	float2 uv:UV;
		
};
struct VS_OUTPUT
{
    float4 pos: SV_POSITION;
    float4 color: COLOR;
    float2 uv:UV;
};

VS_OUTPUT VS(VS_INPUT input)
{
    VS_OUTPUT output;
    output.pos = float4(input.pos,1.0f);
    output.color = input.color;
	output.uv = input.uv;  
    return output;
}

float4 PS(VS_OUTPUT input) : SV_TARGET
{
   return renderTexture.Sample(pointSample, input.uv);
}

technique11 BasicTech
{
	pass P0

	{

		SetVertexShader(CompileShader(vs_5_0, VS()));

		SetGeometryShader(NULL);

		SetPixelShader(CompileShader(ps_5_0, PS()));

	}

}